{"version":3,"sources":["serviceWorker.ts","store/types/index.ts","store/reducers/user-profile.reducer.ts","store/reducers/global-notification.reducer.ts","store/reducers/observable.reducer.ts","store/utils/validators.util.ts","store/reducers/form.reducer.ts","store/reducers/utils/add-form-input.util.ts","store/reducers/utils/validate-form-input.util.ts","store/reducers/utils/update-form-input-value.util.ts","store/reducers/utils/validate-form.util.ts","store/reducers/index.ts","store/middlewares/observable.mware.ts","store/middlewares/notification.mware.ts","store/middlewares/navigation.mware.ts","store/middlewares/identity.mware.ts","store/index.ts","components/link.tsx","store/actions/global-notification.action.ts","components/containers/link.container.tsx","pages/home.page.tsx","store/actions/observable.action.ts","pages/containers/home.container.tsx","components/input-field.tsx","store/actions/form.action.ts","components/containers/input-field.container.tsx","components/layout.tsx","components/primary-button.tsx","components/containers/primary-button.container.tsx","components/form.tsx","components/containers/form.container.tsx","pages/sign-in.page.tsx","pages/containers/sign-in.container.tsx","pages/create-account.page.tsx","store/actions/cred.action.ts","pages/containers/create-account.container.tsx","components/user-layout.tsx","pages/user-profile.page.tsx","pages/containers/user-profile.container.tsx","routes.tsx","index.tsx","assets/img/home-1.jpg","assets/img/home-2.jpg","assets/img/home-3.jpg","assets/img/home-4.jpg"],"names":["Boolean","window","location","hostname","match","SET_USER_PROFILE","HTTP_REQUEST","userProfileReducer","handleActions","state","action","payload","Object","assign","firstname","lastname","email","phonenumber","globalNotificationReducer","notify","notifyType","notifyMessage","observableReducer","isSubmitting","regex","errors","validators","input","test","length","getValidator","key","obj","formReducer","formId","newFormInput","error","fieldId","hasError","hasValue","validator","value","newFormsState","forms","newField","forEach","form","fields","addFormInput","isPristine","isValid","isFormValid","field","fieldVal","validateFormInput","updateFormInputVal","validateForm","rootReducer","combineReducers","formManager","globalNotification","observable","router","userProfile","Observable","store","next","type","data","method","url","success","process","REACT_APP_API_BASE_URL","URL","NODE_ENV","axios","then","res","dispatch","catch","err","Notification","response","message","alert","Navigation","challenge","push","Identity","navigator","credentials","id","name","password","signup_credentials","PasswordCredential","console","log","e","preventSilentAccess","history","createBrowserHistory","basename","routerMiddleware","createRouterMiddleware","useStyles","makeStyles","theme","createStyles","root","display","justifyContent","Link","props","actions","onClick","classes","className","component","variant","unsetGlobalNotification","Type","UNSET_GLOBAL_NOTIFICATION","SET_GLOBAL_NOTIFICATION","setGlobalNotification","createAction","notifyActions","connect","bindActionCreators","Home","autoSignIn","get","mediation","credential","httpRequest","username","handleOnLogout","this","userProfileState","nexProps","src","homepic_1","alt","homepic_2","homepic_3","homepic_4","React","Component","observableActions","HomePage","marginBottom","blurHandler","changeHandler","restofProps","TextField","onBlur","onChange","FormInput","handleOnBlur","onBlurInput","handleOnChange","onChangeInput","currentTarget","addNewInput","autocomplete","editable","label","placeholder","fieldError","findError","autoComplete","htmlFor","ADD_NEW_INPUT_FIELD","CREATE_NEW_FORM","CLEAR_FORM","ONBLUR_INPUT_FIELD","ONCHANGE_INPUT_FIELD","SUBMIT_FORM","createNewForm","onFormSubmit","clearForm","formSubmission","formActions","InputField","useStyls","width","marginTop","spacing","Notify","Alert","severity","Layout","children","title","alignItems","wrapper","margin","position","button","color","backgroundColor","padding","buttonProgress","top","left","marginLeft","PrimaryButton","Button","disabled","undefined","CircularProgress","size","submitHandler","onSubmit","noValidate","Form","handleOnSubmit","formFields","preventDefault","val","setKeyValue","SignInPage","email_address","pwd","notification","CreateAccount","first_name","last_name","storePwdCredential","STORE_PASSWORD_CREDENTIAL","credActions","CreateAccountPage","UserLayout","UserProfilePage","nameEditable","emailEditable","phoneEditable","toggleEditName","edit","setState","toggleEditEmail","toggleEditPhone","exact","from","to","path","SignIn","UserProfile","preloadedState","__REDUX_STATE__","middlewares","navigationMiddleware","observableMiddleware","notificationMiddleware","identityMiddleware","enhancer","composeEnhancers","compose","applyMiddleware","createStore","configureStore","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"4+BAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gDCJOC,EAAmB,0BAkBnBC,EAAe,4BCjBfC,EAAqBC,YAAa,eAE1CH,GAAmB,SAACI,EAAcC,GAIjC,OAHiBA,EAAOC,QACpBC,OAAOC,OAAO,GAAIJ,EAAOC,EAAOC,SAChCF,KAZkB,CAC1BK,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,YAAa,KCOFC,EAA4BV,aAAa,mBFAf,oCEKR,SACzBC,EACAC,GAKA,OAHiBA,EAAOC,QACpBC,OAAOC,OAAO,GAAIJ,EAAOC,EAAOC,QAAgB,CAAEQ,QAAQ,IAC1DV,KAX4C,cFCb,sCEaR,SAACA,GAC5B,OAAOG,OAAOC,OAAO,GAAIJ,EAAO,CAC9BU,QAAQ,EACRC,WAAY,GACZC,cAAe,QAlB+B,GAN1B,CAC1BF,QAAQ,EACRC,WAAY,OACZC,cAAe,KCEJC,EAAoBd,aAAa,mBAKzCF,GAAe,SACdG,EACAC,GAEA,OAAOE,OAAOC,OAAO,GAAIJ,EAAO,CAC9Bc,cAAc,OAVwB,cHeV,qCGFR,SAACd,GACvB,OAAOG,OAAOC,OAAO,GAAIJ,EAAO,CAC9Bc,cAAc,OAfwB,cHgBV,qCGER,SAACd,GACvB,OAAOG,OAAOC,OAAO,GAAIJ,EAAO,CAC9Bc,cAAc,OApBwB,GAJlB,CAC1BA,cAAc,I,QCOVC,GAAsB,mBArBH,mBAsBH,wEADM,cApBH,mBAsBH,aAFM,cAnBJ,mBAsBH,mDAHO,GAatBC,GAAwB,mBA7BN,oBA8BH,uCADS,cA5BN,0BA8BH,wCAFS,cA3BP,iBA8BH,qEAHU,cA1BN,kBA8BH,yBAJS,GAajBC,GAA6B,mBApC5B,SAqCH,SAACC,GACR,IAAKH,EAAK,iBAAmBI,KAAKD,GAChC,OAAOF,EAAM,qBAHuB,cAnCzB,YAyCH,SAACE,GACX,OAAKH,EAAK,iBAAmBI,KAAKD,GAEtBH,EAAK,iBAAkBI,KAAKD,QAAjC,EACEF,EAAM,eAFNA,EAAM,2BARuB,cAlC1B,WA+CH,SAACE,GACV,GAAqB,IAAjBA,EAAME,OACR,OAAOJ,EAAM,mBAfuB,GAoB7BK,EAAe,SAAiDC,GAAjD,OAA4D,SAACC,GAAD,OACtFA,EAAID,KCzCOE,EAAczB,aAAa,mBLDL,oCKMR,SACrBC,EACAC,GACI,IAAD,EACoCA,EAAOC,QAAtCuB,EADL,EACKA,OACFC,EAAe,CACnBC,MAAO,GACPC,QAJC,EACaA,QAIdC,UAAU,EACVC,UAAU,EACVC,UAPC,EACsBA,UAOvBC,MAAO,IAEHC,ECZG,SAACC,EAAyBT,EAAgBU,GAQvD,OAPAD,EAAME,SAAQ,SAACC,GAETA,EAAKZ,SAAWA,IAClBY,EAAKC,OAAL,CAAeH,GAAf,mBAA4BE,EAAKC,aAI9BJ,EDImBK,CAAavC,EAAMkC,MAAOT,EAAQC,GACxD,MAAO,CAACQ,MAAM,YAAKD,OAnBe,cLJT,0BKyBR,SACjBjC,EACAC,GAWA,MAAO,CAAEiC,MAAM,CARC,CACdI,OAAQ,GACRb,OAHiBxB,EAAOC,QAAlBuB,OAINe,YAAY,EACZ1B,cAAc,EACd2B,SAAS,IAGG,mBAAgBzC,EAAMkC,YAlCF,cLAN,mCKoCR,SACpBlC,EACAC,GACI,IAAD,EACyBA,EAAOC,QAA3BuB,EADL,EACKA,OAAQG,EADb,EACaA,QACVK,EElEG,SAACC,EAAyBT,EAAgBG,GA6BvD,OA5BAM,EAAME,SAAQ,SAACC,GAEb,GAAIA,EAAKZ,SAAWA,EAAQ,CAC1BY,EAAKG,YAAa,EAClB,IAAMF,EAASD,EAAKC,OAChBI,GAAc,EAElBJ,EAAOF,SAAQ,SAACO,GACd,GAAIA,EAAMf,UAAYA,EAAS,CAC7B,IAAMgB,EAAWD,EAAMX,MACjBD,EAAYY,EAAMZ,UAClBJ,EAAQN,EAAaU,EAAbV,CAAwBJ,EAAxBI,CAAoCuB,GAE9CjB,GACFgB,EAAMhB,MAAQA,EACdgB,EAAMd,UAAW,EACjBa,GAAc,IAEdC,EAAMhB,MAAQ,GACdgB,EAAMd,UAAW,OAKvBQ,EAAKI,QAAUC,MAIZR,EFqCmBW,CAAkB7C,EAAMkC,MAAOT,EAAQG,GAC7D,MAAO,CAACM,MAAM,YAAKD,OA1Ce,cLCJ,qCK2CR,SACtBjC,EACAC,GACI,IAAD,EACgCA,EAAOC,QAAlCuB,EADL,EACKA,OAAQG,EADb,EACaA,QAASI,EADtB,EACsBA,MACnBC,EG3EG,SAACC,EAAyBT,EAAgBG,EAAiBgB,GAqBxE,OApBAV,EAAME,SAAQ,SAACC,GAETA,EAAKZ,SAAWA,IAClBY,EAAKG,YAAa,EACHH,EAAKC,OAEbF,SAAQ,SAACO,GACVA,EAAMf,UAAYA,IAChBgB,EAASxB,QACXuB,EAAMb,UAAW,EACjBa,EAAMX,MAAQY,IAEdD,EAAMb,UAAW,EACjBa,EAAMX,MAAQ,YAOjBE,EHsDmBY,CAAmB9C,EAAMkC,MAAOT,EAAQG,EAASI,GACvE,MAAO,CAACE,MAAM,YAAKD,OAlDe,cLHb,sBKuDR,SACbjC,EACAC,GACI,IACIwB,EAAWxB,EAAOC,QAAlBuB,OACFQ,EIlFG,SAACC,EAAyBT,GA2BvC,OA1BAS,EAAME,SAAQ,SAACC,GAEb,GAAIA,EAAKZ,SAAWA,EAAQ,CAC1BY,EAAKG,YAAa,EAClB,IAAMF,EAASD,EAAKC,OAChBI,GAAc,EAElBJ,EAAOF,SAAQ,SAACO,GACZ,IAAMC,EAAWD,EAAMX,MACjBD,EAAYY,EAAMZ,UAClBJ,EAAQN,EAAaU,EAAbV,CAAwBJ,EAAxBI,CAAoCuB,GAE9CjB,GACFgB,EAAMhB,MAAQA,EACdgB,EAAMd,UAAW,EACjBa,GAAc,IAEdC,EAAMhB,MAAQ,GACdgB,EAAMd,UAAW,MAIvBQ,EAAKI,QAAUC,MAIZR,EJuDmBa,CAAa/C,EAAMkC,MAAOT,GAChD,MAAO,CAACS,MAAM,YAAKD,OA1De,cLLd,qBKiER,SAACjC,GACb,OAAOG,OAAOC,OAAO,GAAIJ,EAAO,OA7DE,GAJZ,CAC1BkC,MAAO,KKCIc,EAAcC,YAA2B,CACpDC,YAAa1B,EACb2B,mBAAoB1C,EACpB2C,WAAYvC,EACZwC,WACAC,YAAaxD,I,iBCWAyD,EAlCgB,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACxD,GAAiB,IAAD,EAC9CA,GAAU,GAAjCyD,EADqE,EACrEA,KADqE,IAC/DxD,eAD+D,MACrD,GADqD,EAErEyD,EAA+BzD,EAA/ByD,KAAMC,EAAyB1D,EAAzB0D,OAAQC,EAAiB3D,EAAjB2D,IAAKC,EAAY5D,EAAZ4D,QAFkD,EAGhCC,6LAArCC,EAHqE,EAGrEA,uBACFC,EAAmB,eAJoD,EAG7CC,SACpB,UAA+BF,GAA/B,OAAwDH,GAAQA,EAE5E,OAAIH,IAAS7D,EACJsE,IAAM,CAACP,SAAQC,IAAKI,EAAKN,SAC7BS,MAAK,SAACC,GAEDP,GACFN,EAAMc,SAAS,CACbZ,KAAMI,EACN5D,QAASmE,EAAIV,OAIjBH,EAAMc,SAAS,CACbZ,KXQ0B,oCWP1BxD,QAASmE,OAGZE,OAAM,SAACC,GACNhB,EAAMc,SAAS,CACbZ,KXC0B,oCWA1BxD,QAASsE,OAKVf,EAAKxD,MCdCwE,EAlBkB,SAACjB,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACxD,GAAiB,IAAD,EAChDA,GAAU,GAAjCyD,EADuE,EACvEA,KADuE,IACjExD,eADiE,MACvD,GADuD,EAG/E,GZwBkC,sCYxB9BwD,EAA+B,CAAC,IAAD,KACC,OAAPxD,QAAO,IAAPA,GAAA,UAAAA,EAASwE,gBAAT,eAAmBf,OAAQ,GAA9CgB,EADyB,EACzBA,QAASC,EADgB,EAChBA,MAEjBpB,EAAMc,SAAS,CACbZ,KZMiC,mCYLjCxD,QAAS,CACPS,WAAYiE,GAAS,QACrBhE,cAAe+D,GAAW,2BAKhC,OAAOlB,EAAKxD,MCHC4E,EAdgB,SAACrB,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACxD,GAAiB,IAAD,EAC9CA,GAAU,GAAjCyD,EADqE,EACrEA,KADqE,IAC/DxD,eAD+D,MACrD,GADqD,EAG7E,GbKsB,0BaLlBwD,GAAqBxD,EAAQ4E,UAAW,CAAC,IACnCA,EAAc5E,EAAd4E,UACRtB,EAAMc,SAASS,YAAKD,SACf,GbwB2B,sCaxBvBpB,GAAiCxD,EAAQyD,KAAM,CAAC,IACjDmB,IAAqB,OAAP5E,QAAO,IAAPA,OAAA,EAAAA,EAASyD,OAAQ,IAA/BmB,UACRtB,EAAMc,SAASS,YAAKD,IAGtB,OAAOrB,EAAKxD,MCqCC+E,EA7Cc,SAACxB,GAAD,OAAgB,SAACC,GAAD,OAAe,SAACxD,GAAiB,IAAD,EAC5CA,GAAU,GAAjCyD,EADmE,EACnEA,KADmE,IAC7DxD,eAD6D,MACnD,GADmD,EAG3E,GdMuC,0BcNnCwD,GAEF,GAAIuB,UAAUC,aAAehF,EAAQgF,YAAa,CAAC,IAAD,EACjBhF,EAAQgF,YAA/BC,EADwC,EACxCA,GAAIC,EADoC,EACpCA,KAAMC,EAD8B,EAC9BA,SACZC,EAAqB,IAAIC,mBAAmB,CAChDJ,KACAC,OACAC,aAEFJ,UAAUC,YAAY1B,MAAM8B,GACzBlB,MAAK,WACJoB,QAAQC,IAAI,0BAA2BH,EAAmBH,OAE3DZ,OAAM,SAACmB,GACNF,QAAQC,IAAI,4BAA6BC,WdPd,iCcUxBhC,IAELuB,UAAUC,aACZD,UAAUC,YAAYS,sBACnBvB,MAAK,WACJoB,QAAQC,IAAI,2FAEblB,OAAM,SAACmB,GACNF,QAAQC,IAAI,kCAAmCC,MAIrDlC,EAAMc,SAAS,CACbpE,QAAS,CACPG,UAAW,GACXC,SAAU,GACVE,YAAa,IAEfkD,KAAM9D,KAIV,OAAO6D,EAAKxD,MC/BD2F,EAAeC,YAAqB,CAC/CC,SAAU/B,cAICgC,EAAmBC,YAAuBJ,G,2DCZjDK,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,eAAgB,eA2BPC,EAtBkC,SAACC,GAAW,IACnDC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,QAASxB,EAAcsB,EAAdtB,GAAInD,EAAUyE,EAAVzE,MAKxB4E,EAAUX,IAEhB,OACE,yBAAKY,UAAWD,EAAQP,MACtB,kBAAC,IAAD,CACElB,GAAIA,EACJ2B,UAAU,SACVC,QAAQ,QACRJ,QAZiB,SAACjB,GACtBgB,EAAQM,0BACW,oBAAZL,GAA0BA,EAAQjB,KAYpC1D,K,SChCIiF,GAAO,CAClBC,0BjBeuC,qCiBdvCC,wBjBaqC,oCiBV1BC,GAAwBC,YACnCJ,GAAKE,yBAGMH,GAA0BK,YACrCJ,GAAKC,2BCRDR,GAAevG,OAAOC,OAAO,GAAIkH,GAQxBC,gBANQ,iBAAO,MAEH,SAACjD,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4Cf,G,gFC+I5CiB,G,4MA7IbC,WAAa,WAAO,IACVhB,EAAY,EAAKD,MAAjBC,QAEJzB,UAAUC,aACZD,UAAUC,YAAYyC,IAAI,CACxBC,UAAW,WACXvC,UAAU,IACTjB,MAAK,SAACyD,GACkB,cAAX,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYnE,OAEdgD,EAAQoB,YAAY,CAClBnE,KAAM,CACJoE,SAAUF,EAAW1C,GACrBE,SAAUwC,EAAWxC,UAEvBzB,OAAQ,OACRC,IAAK,iBACLC,QAASlE,OAGZ2E,OAAM,SAACmB,GACRF,QAAQC,IAAI,0BAA2BC,O,EAwB7CsC,eAAiB,WACf,EAAKvB,MAAMC,QAAQoB,YAAY,CAC7BnE,KAAM,GACNC,OAAQ,OACRC,IAAK,kBACLC,QnBjD+B,kC,uDmByBnC,WACOmE,KAAKxB,MAAMyB,iBAAiB7H,WAC/B4H,KAAKP,e,mCAIT,SAAsBS,GACpB,OAAIF,KAAKxB,MAAMyB,iBAAiB7H,YAAc8H,EAASD,iBAAiB7H,Y,gCAM1E,WACO4H,KAAKxB,MAAMyB,iBAAiB7H,WAC/B4H,KAAKP,e,oBAaT,WAAU,IAAD,EAC+BO,KAAKxB,MAAnCb,EADD,EACCA,QACAvF,EAFD,EACU6H,iBACT7H,UACR,OACE,yBAAKwG,UAAU,WACb,gCACE,6CAEF,6BAASA,UAAU,eACjB,2FAGA,kBAAC,GAAD,CACE1B,GAAG,gBACHnD,MAAM,gBAGV,6BAAS6E,UAAU,QACjB,6BAASA,UAAU,cACjB,6BACE,yBAAKuB,IAAKC,KAAWC,IAAI,cAE3B,6BACE,yBAAKF,IAAKG,KAAWD,IAAI,cAE3B,6BACE,yBAAKF,IAAKI,KAAWF,IAAI,cAE3B,6BACE,yBAAKF,IAAKK,KAAWH,IAAI,eAG7B,6BAASzB,UAAU,cACjB,4BAEIxG,EACE,4BACE,yBAAKwG,UAAU,cAAf,WAAqCxG,IAGvC,4BACE,kBAAC,GAAD,CACE8E,GAAG,oBACHnD,MAAM,UACN2E,QAAS,kBAAMf,EAAQb,KAAK,cAKpC,4BACE,kBAAC,GAAD,CACEI,GAAG,iBACHnD,MAAM,kBAGV,4BACE,kBAAC,GAAD,CACEmD,GAAG,cACHnD,MAAM,aAGV,4BACE,kBAAC,GAAD,CACEmD,GAAG,WACHnD,MAAM,UAIR3B,EACE,kBAAC,GAAD,CACE8E,GAAG,cACHnD,MAAM,WACN2E,QAASsB,KAAKD,iBAEd,QAKZ,6BAASnB,UAAU,UACjB,6D,GAvIS6B,IAAMC,WCXZ1B,GAAO,CAClBpH,gBAGWiI,GAAcT,YACzBJ,GAAKpH,cCFD6G,GAAevG,OAAOC,OAAO,GAAIwI,GAUxBrB,gBARQ,SAACvH,GAAD,MAAuB,CAC5CkI,iBAAkBlI,EAAMsD,gBAGC,SAACgB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4CsB,I,mBCGrD5C,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBuC,aAAc,QAgBdH,GAAgD,SAAClC,GAAW,IACxDsC,EAA+CtC,EAA/CsC,YAAaC,EAAkCvC,EAAlCuC,cAAkBC,EADwB,aACRxC,EADQ,iCAEzDG,EAAUX,KAEhB,OACE,yBAAKY,UAAWD,EAAQP,MACtB,kBAAC6C,GAAA,EAAD,iBACMD,EADN,CAEEE,OAAQJ,EACRK,SAAUJ,EACVjC,QAAQ,gBAMKsC,G,kDACnB,WAAY5C,GAAwB,IAAD,uBACjC,cAAMA,IAUR6C,aAAe,SAAC5D,GAA2C,IAAD,EACf,EAAKe,MAAtCC,EADgD,EAChDA,QAASjF,EADuC,EACvCA,OAAYG,EAD2B,EAC/BuD,GAEzBuB,EAAQ6C,YAAY,CAClB9H,SACAG,aAhB+B,EAoBnC4H,eAAiB,SAAC9D,GAA4C,IAAD,EAClB,EAAKe,MAAtCC,EADmD,EACnDA,QAASjF,EAD0C,EAC1CA,OAAYG,EAD8B,EAClCuD,GACzBuB,EAAQ+C,cAAc,CACpBhI,SACAG,UACAI,MAAO0D,EAAEgE,cAAc1H,SAzBQ,IAEzBP,EAAmCgF,EAAnChF,OAAYG,EAAuB6E,EAA3BtB,GAAapD,EAAc0E,EAAd1E,UAFI,OAIjC0E,EAAMC,QAAQiD,YAAY,CACxBlI,SACAG,UACAG,cAP+B,E,0CA6BnC,WAAU,IAAD,EAWHkG,KAAKxB,MATPmD,EAFK,EAELA,aACAnI,EAHK,EAGLA,OACAyB,EAJK,EAILA,YAJK,IAKL2G,gBALK,SAML1E,EANK,EAMLA,GACA2E,EAPK,EAOLA,MAPK,IAQLC,mBARK,MAQS,GART,EASLrG,EATK,EASLA,KATK,IAUL1B,aAVK,MAUG,GAVH,EA4BDgI,EAhBsB,WAC1B,IAAIrI,EAAgB,GAapB,OAXAuB,EAAYhB,MAAME,SAAQ,SAACC,GACrBA,EAAKZ,SAAWA,GACHY,EAAKC,OACbF,SAAQ,SAACO,GACVA,EAAMf,UAAYuD,GAAMxC,EAAMd,WAChCF,EAAQgB,EAAMhB,aAMfA,EAEkBsI,GAE3B,OAAOJ,EACL,kBAAC,GAAD,iBACOG,EAAa,CAAErI,OAAO,GAAS,GADtC,CAEEuI,aAAcN,EACdlG,KAAMA,EACNyB,GAAIA,EACJ2E,MAAOA,EACPC,YAAaA,EACbhB,YAAad,KAAKqB,aAClBN,cAAef,KAAKuB,kBAGtB,6BACE,2BAAOW,QAAShF,GAAK2E,GACrB,2BAAI9H,Q,GA1E2B0G,IAAMC,WC9ChC1B,GAAO,CAClBmD,oBvBeiC,mCuBdjCC,gBvBW6B,yBuBV7BC,WvBSwB,oBuBRxBC,mBvBagC,kCuBZhCC,qBvBakC,oCuBZlCC,YvBQyB,sBuBLdd,GAActC,YACzBJ,GAAKmD,qBAGMM,GAAgBrD,YAC3BJ,GAAKoD,iBAGMd,GAAclC,YACzBJ,GAAKsD,oBAGMd,GAAgBpC,YAC3BJ,GAAKuD,sBAGMG,GAAetD,YAC1BJ,GAAKuD,sBAGMI,GAAYvD,YACvBJ,GAAKqD,YAGMO,GAAiBxD,YAC5BJ,GAAKwD,aCrCD/D,GAAevG,OAAOC,OAAO,GAAI0K,EAAaxD,GAUrCC,gBARQ,SAACvH,GAAD,MAAuB,CAC5CkD,YAAalD,EAAMkD,gBAGM,SAACoB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4CwD,I,UCbrDC,I,OAAW9E,aAAW,SAACC,GAAD,OAC1BC,YAAa,CACXC,KAAM,CACJ4E,MAAO,OACP,YAAa,CACXC,UAAW/E,EAAMgF,QAAQ,WAW3BC,GAA+C,SAAC3E,GAAW,IACvD9B,EAAkB8B,EAAlB9B,QAASjB,EAAS+C,EAAT/C,KAEjB,OACE,yBAAKmD,UAAWmE,KAAW3E,MACzB,kBAACgF,GAAA,EAAD,CAAOC,SAAU5H,GACdiB,KAuCM4G,GAzBsC,SAAC9E,GAAW,IACvD+E,EAAuD/E,EAAvD+E,SAAU9K,EAA6C+F,EAA7C/F,OAAQE,EAAqC6F,EAArC7F,cAAeD,EAAsB8F,EAAtB9F,WAAY8K,EAAUhF,EAAVgF,MACrD,OACE,yBAAK5E,UAAU,YACb,yBAAKA,UAAU,WACb,6BAASA,UAAU,QACjB,8CAEF,6BAASA,UAAU,UACfnG,EAAS,kBAAC,GAAD,CAAQgD,KAAM/C,EAAYgE,QAAS/D,IAAoB,MAEpE,8BACE,4BAAQiG,UAAU,UAChB,4BAAK4E,IAEP,6BAAS5E,UAAU,WAAW2E,IAEhC,6BAAS3E,UAAU,UACjB,2D,oBC3CJZ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACToF,WAAY,SACZ5C,aAAc,IAEhB6C,QAAS,CACPC,OAAQzF,EAAMgF,QAAQ,GACtBU,SAAU,WACVZ,MAAO,QAETa,OAAQ,CACNC,MAAO,OACPC,gBAAiB,UACjBf,MAAO,OACPgB,QAAS,GACT,UAAW,CACTD,gBAAiB,YAGrBE,eAAgB,CACdH,MAAO,UACPF,SAAU,WACVM,IAAK,MACLC,KAAM,MACNlB,WAAY,GACZmB,YAAa,SAmCJC,GA9B6C,SAAC7F,GAAW,IAC9DC,EAAsCD,EAAtCC,QAASC,EAA6BF,EAA7BE,QAASxB,EAAoBsB,EAApBtB,GAAIzB,EAAgB+C,EAAhB/C,KAAM1B,EAAUyE,EAAVzE,MAC5BlB,EAAiB2F,EAAMrD,WAAvBtC,aAKF8F,EAAUX,KAEhB,OACE,yBAAKY,UAAWD,EAAQP,MACtB,yBAAKQ,UAAWD,EAAQ+E,SACtB,kBAACY,GAAA,EAAD,CACER,MAAM,UACNlF,UAAWD,EAAQkF,OACnBU,WAAU1L,QAAsB2L,EAChCtH,GAAIA,EACJwB,QAde,SAACjB,GACtBgB,EAAQM,0BACW,oBAAZL,GAA0BA,EAAQjB,IAanChC,KAAMA,EACN1B,MAAOA,EACP+E,QAAQ,aAEP/E,GAEFlB,GAAgB,kBAAC4L,GAAA,EAAD,CAAkBC,KAAM,GAAI9F,UAAWD,EAAQsF,oBCjElExF,GAAevG,OAAOC,OAAO,GAAIkH,GAUxBC,gBARQ,SAACvH,GAAD,MAAuB,CAC5CoD,WAAYpD,EAAMoD,eAGO,SAACkB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4C+E,ICbrDrG,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ,uBAAwB,CACtBuF,OAAQzF,EAAMgF,QAAQ,GACtBF,MAAO,aAYTtC,GAAgD,SAAClC,GAAW,IACxD+E,EAAuC/E,EAAvC+E,SAAc/J,EAAyBgF,EAA7BtB,GAAYyH,EAAiBnG,EAAjBmG,cACxBhG,EAAUX,KAEhB,OACI,0BACEd,GAAI1D,EACJoF,UAAWD,EAAQP,KACnBwG,SAAUD,EACVE,YAAU,GAETtB,IAyDMuB,G,kDAtCb,WAAYtG,GAAmB,IAAD,8BAC5B,cAAMA,IAORuG,eAAiB,SAACtH,GAA6B,IAAD,EACW,EAAKe,MAApDC,EADoC,EACpCA,QAASxD,EAD2B,EAC3BA,YAAiBzB,EADU,EACd0D,GAAY0H,EADE,EACFA,SACtCI,EAA2B,GAC3BvK,GAAc,EAClBgD,EAAEwH,iBACFxG,EAAQmE,eAAe,CAAEpJ,WACzByB,EAAYhB,MAAME,SAAQ,SAACC,GACrBA,EAAKZ,SAAWA,IAClBiB,EAAcL,EAAKI,QACnBwK,EAAa5K,EAAKC,WAItB,IAAMA,EAAS,GAEf2K,EAAW7K,SAAQ,SAACO,GAClB,IA5B8ErB,EA4BxEM,EAAUe,EAAMf,QAChBgB,EAAWD,EAAMX,OA7BuDV,EA8BlEM,EA9B6E,SAACL,GAAD,OAAc,SAAC4L,GAAD,OAC3G5L,EAAID,GAAO6L,KA6Bc7K,EAArB8K,CAA6BxK,MAIX,oBAAbiK,GAA2BA,EAASnH,EAAGpD,EAAQI,IA3BtD+D,EAAMC,QAAQgE,cAAc,CAC1BjJ,OAAQgF,EAAMtB,KAJY,E,0CAiC9B,WACE,OAAQ,kBAAC,GAAD,eAAWyH,cAAe3E,KAAK+E,gBAAoB/E,KAAKxB,Y,GAnCjDiC,IAAMC,WC1CnBjC,GAAevG,OAAOC,OAAO,GAAI0K,EAAaxD,GAUrCC,gBARQ,SAACvH,GAAD,MAAuB,CAC5CkD,YAAalD,EAAMkD,gBAGM,SAACoB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4CwF,IC0F5CM,G,4MA/DbL,eAAiB,SAACtH,EAAyBpD,EAAoBI,GAA0B,IAC/EgE,EAAY,EAAKD,MAAjBC,QAEJhE,GAEFgE,EAAQoB,YAAY,CAClBnE,KAAM,CACJoE,SAAUzF,EAAOgL,cACjBjI,SAAU/C,EAAOiL,KAEnB3J,OAAQ,OACRC,IAAK,iBACLC,QAASlE,K,uDAxCf,WAAqB,IACX8G,EAAYuB,KAAKxB,MAAjBC,QAGJzB,UAAUC,aACZD,UAAUC,YAAYyC,IAAI,CACxBC,UAAW,WACXvC,UAAU,IACTjB,MAAK,SAACyD,GACPrC,QAAQC,IAAI,oBAAqBoC,GACR,cAAX,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYnE,OAEdgD,EAAQoB,YAAY,CAClBnE,KAAM,CACJoE,SAAUF,EAAW1C,GACrBE,SAAUwC,EAAWxC,UAEvBzB,OAAQ,OACRC,IAAK,iBACLC,QAASlE,OAGZ2E,OAAM,SAACmB,GACRF,QAAQC,IAAI,0BAA2BC,Q,oBAsB7C,WAAU,IAAD,EAC2BuC,KAAKxB,MAA/Bb,EADD,EACCA,QAAS4H,EADV,EACUA,aACT9M,EAAsC8M,EAAtC9M,OAAQE,EAA8B4M,EAA9B5M,cAAeD,EAAe6M,EAAf7M,WACvBoE,EAASa,EAATb,KAGR,OACE,kBAAC,GAAD,CACErE,OAAQA,EACRE,cAAeA,EACfD,WAAYA,EACZ8K,MAAM,2BAEN,6BACE,kBAAC,GAAD,CAAMtG,GAVG,UAUS0H,SAAU5E,KAAK+E,gBAC/B,kBAAC,GAAD,CACEpD,aAAa,MACbnI,OAbK,UAcL0D,GAAG,gBACH2E,MAAM,2BACN1E,KAAK,WACL1B,KAAK,QACL3B,UAAU,UAEZ,kBAAC,GAAD,CACE6H,aAAa,MACbnI,OAtBK,UAuBL0D,GAAG,MACH2E,MAAM,sBACN1E,KAAK,WACL1B,KAAK,WACL3B,UAAU,YAEZ,kBAAC,GAAD,CAAe2B,KAAK,SAASyB,GAAG,UAAUnD,MAAM,YAChD,kBAAC,GAAD,CACEmD,GAAG,oBACHnD,MAAM,iBACN2E,QAAS,kBAAM5B,EAAK,4B,GAnFT2D,IAAMC,WCPzBjC,GAAevG,OAAOC,OAAO,GACjC0K,EACAxD,EACAsB,GAWarB,gBARQ,SAACvH,GAAD,MAAuB,CAC5CwN,aAAcxN,EAAMmD,uBAGK,SAACmB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4C8F,ICgF5CI,GAvFoD,SAAChH,GAAW,IACrE1B,EAAS0B,EAAMb,QAAfb,KACFtD,EAAS,iBAF6D,EAgC9BgF,EAAM+G,aAA5C9M,EAhCoE,EAgCpEA,OAAQE,EAhC4D,EAgC5DA,cAAeD,EAhC6C,EAgC7CA,WAE/B,OACE,kBAAC,GAAD,CACED,OAAQA,EACRE,cAAeA,EACfD,WAAYA,EACZ8K,MAAM,kBAEN,6BACE,kBAAC,GAAD,CAAMtG,GAAI1D,EAAQoL,SArCD,SAACnH,EAAyBpD,EAAoBI,GAA0B,IACrFgE,EAAYD,EAAZC,QACAgH,EAA8CpL,EAA9CoL,WAAYC,EAAkCrL,EAAlCqL,UAAWL,EAAuBhL,EAAvBgL,cAAeC,EAAQjL,EAARiL,IAE1C7K,GACFgE,EAAQoB,YAAY,CAClBnE,KAAM,CACJtD,UAAWqN,EACXpN,SAAUqN,EACV5F,SAAUuF,EACVjI,SAAUkI,GAEZ3J,OAAQ,OACRC,IAAK,yBACLC,QAASlE,IACRwE,MAAK,WACNsC,EAAQkH,mBAAmB,CACzB1I,YAAa,CACXC,GAAImI,EACJlI,KAAMkI,EACNjI,SAAUkI,UAkBZ,kBAAC,GAAD,CACE9L,OAAQA,EACR0D,GAAG,aACH2E,MAAM,wBACNpG,KAAK,OACL3B,UAAU,YAEZ,kBAAC,GAAD,CACEN,OAAQA,EACR0D,GAAG,YACH2E,MAAM,uBACNpG,KAAK,OACL3B,UAAU,YAEZ,kBAAC,GAAD,CACE6H,aAAa,WACbnI,OAAQA,EACR0D,GAAG,gBACH2E,MAAM,2BACN1E,KAAK,WACL1B,KAAK,QACL3B,UAAU,UAEZ,kBAAC,GAAD,CACE6H,aAAa,eACbnI,OAAQA,EACR0D,GAAG,MACH2E,MAAM,sBACN1E,KAAK,WACL1B,KAAK,WACL3B,UAAU,aAEZ,kBAAC,GAAD,CAAe2B,KAAK,SAASyB,GAAG,iBAAiBnD,MAAM,mBACvD,kBAAC,GAAD,CACEmD,GAAG,aACHnD,MAAM,UACN2E,QAAS,kBAAM5B,EAAK,iBC3FnBkC,GAAO,CAClB4G,0BjCWuC,yBiCR5BD,GAAqBvG,YAChCJ,GAAK4G,2BCDDnH,GAAevG,OAAOC,OAAO,GACjC0N,EACAxG,EACAsB,GAUarB,gBARQ,SAACvH,GAAD,MAAuB,CAC5CwN,aAAcxN,EAAMmD,uBAGK,SAACmB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4CwG,ICa5CC,I,OAvB0C,SAACvH,GAAW,IAC3D+E,EAA+C/E,EAA/C+E,SAAU5K,EAAqC6F,EAArC7F,cAAeD,EAAsB8F,EAAtB9F,WAAY8K,EAAUhF,EAAVgF,MAC7C,OACE,yBAAK5E,UAAU,WACb,gCACE,wCAEF,6BAASA,UAAU,eACjB,4BAAK4E,IAEN7K,EACC,6BAASiG,UAAU,gBACjB,yBAAKA,UAAS,kBAAalG,IAAeC,IAE1C,KACJ,6BAASiG,UAAU,QAAQ2E,GAC3B,6BAAS3E,UAAU,UACjB,2DCRKoH,I,OAAb,4MAIEjO,MAAQ,CACNkO,cAAc,EACdC,eAAe,EACfC,eAAe,GAPnB,EAUEC,eAAiB,SAAC3I,EAAyB4I,GACzC,EAAKC,SAAS,CACZL,aAAcI,KAZpB,EAgBEE,gBAAkB,SAAC9I,EAAyB4I,GAC1C,EAAKC,SAAS,CACZJ,cAAeG,KAlBrB,EAsBEG,gBAAkB,SAAC/I,EAAyB4I,GAC1C,EAAKC,SAAS,CACZH,cAAeE,KAxBrB,EA4BEtG,eAAiB,WACf,EAAKvB,MAAMC,QAAQoB,YAAY,CAC7BnE,KAAM,GACNC,OAAQ,OACRC,IAAK,kBACLC,QAAS,iBAjCf,4CAqCE,WAAU,IAAD,SACoCmE,KAAKxB,MAAxCyB,EADD,EACCA,iBAAkBsF,EADnB,EACmBA,aAClBnN,EAA4C6H,EAA5C7H,UAAWC,EAAiC4H,EAAjC5H,SAAUC,EAAuB2H,EAAvB3H,MAAOC,EAAgB0H,EAAhB1H,YAC5BE,EAAsC8M,EAAtC9M,OAAQE,EAA8B4M,EAA9B5M,cAAeD,EAAe6M,EAAf7M,WAC/B,OACE,kBAAC,GAAD,CACED,OAAQA,EACRE,cAAeA,EACfD,WAAYA,EACZ8K,MAAK,kBAAapL,IAElB,yBAAKwG,UAAU,eACb,6BACE,kBAAC,GAAD,CACE1B,GAAG,aACHnD,MAAM,SACN2E,QAASsB,KAAKD,kBAGlB,4BACE,4BACE,8BACE,kBAAC,GAAD,CACE6B,SAAU5B,KAAKjI,MAAMkO,aACrB/I,GAAG,aACH2E,MAAM,wBACNpG,KAAK,OACL1B,MAAO3B,IAET,kBAAC,GAAD,CACEwJ,SAAU5B,KAAKjI,MAAMkO,aACrB/I,GAAG,YACH2E,MAAM,uBACNpG,KAAK,OACL1B,MAAO1B,IAET,yBAAKuG,UAAU,WACZoB,KAAKjI,MAAMkO,aACV,oCACE,yBAAKrH,UAAU,aACb,4BACEnD,KAAK,SACLyB,GAAG,iBACHnD,MAAM,SACN2E,QAAS,SAACjB,GAAD,OACP,EAAK2I,eAAe3I,GAAG,KAL3B,WAWF,yBAAKmB,UAAU,WACb,4BAAQnD,KAAK,SAASyB,GAAG,aAAanD,MAAM,UAA5C,YAMJ,yBAAK6E,UAAU,gBACb,4BACEnD,KAAK,SACLyB,GAAG,WACHnD,MAAM,OACN2E,QAAS,SAACjB,GAAD,OACP,EAAK2I,eAAe3I,GAAG,KAL3B,YAeV,4BACE,8BACE,kBAAC,GAAD,CACEmE,SAAU5B,KAAKjI,MAAMmO,cACrBhJ,GAAG,gBACH2E,MAAM,2BACNpG,KAAK,QACL1B,MAAOzB,IAET,yBAAKsG,UAAU,WACZoB,KAAKjI,MAAMmO,cACV,oCACE,yBAAKtH,UAAU,aACb,4BACEnD,KAAK,SACLyB,GAAG,kBACHnD,MAAM,SACN2E,QAAS,SAACjB,GAAD,OACP,EAAK8I,gBAAgB9I,GAAG,KAL5B,WAWF,yBAAKmB,UAAU,WACb,4BAAQnD,KAAK,SAASyB,GAAG,cAAcnD,MAAM,UAA7C,YAMJ,yBAAK6E,UAAU,gBACb,4BACEnD,KAAK,SACLyB,GAAG,YACHnD,MAAM,OACN2E,QAAS,SAACjB,GAAD,OACP,EAAK8I,gBAAgB9I,GAAG,KAL5B,YAeV,4BACE,8BACE,kBAAC,GAAD,CACEmE,SAAU5B,KAAKjI,MAAMoO,cACrBjJ,GAAG,eACH2E,MAAM,0BACNpG,KAAK,QACL1B,MAAOxB,IAET,yBAAKqG,UAAU,WACZoB,KAAKjI,MAAMoO,cACV,oCACE,yBAAKvH,UAAU,aACb,4BACEnD,KAAK,SACLyB,GAAG,kBACHnD,MAAM,SACN2E,QAAS,SAACjB,GAAD,OACP,EAAK+I,gBAAgB/I,GAAG,KAL5B,WAWF,yBAAKmB,UAAU,WACb,4BAAQnD,KAAK,SAASyB,GAAG,cAAcnD,MAAM,UAA7C,YAMJ,yBAAK6E,UAAU,gBACb,4BACEnD,KAAK,SACLyB,GAAG,kBACHnD,MAAM,OACN2E,QAAS,SAACjB,GAAD,OACP,EAAK+I,gBAAgB/I,GAAG,KAL5B,mBA9LtB,GAAqCgD,IAAMC,YCZrCjC,GAAevG,OAAOC,OAAO,GAAIkH,EAAesB,GAWvCrB,gBATQ,SAACvH,GAAD,MAAuB,CAC5CwN,aAAcxN,EAAMmD,mBACpB+E,iBAAkBlI,EAAMsD,gBAGC,SAACgB,GAAD,MAAyB,CAClDoC,QAASc,YAAmBd,GAASpC,MAGxBiD,CAA4C0G,ICZ5C,cACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,OAAK,EACLC,KAAK,IACLC,GAAG,UAEL,kBAAC,IAAD,CACEF,OAAK,EACLG,KAAK,QACL/H,UAAWW,GACXnG,IAAI,iBAEN,kBAAC,IAAD,CACEoN,OAAK,EACLG,KAAK,SACL/H,UAAWgI,GACXxN,IAAI,kBAEN,kBAAC,IAAD,CACEoN,OAAK,EACLG,KAAK,iBACL/H,UAAW2G,GACXnM,IAAI,0BAEN,kBAAC,IAAD,CACEoN,OAAK,EACLG,KAAK,gBACL/H,UAAWiI,GACXzN,IAAI,0BC1BNkC,I,OxBcwB,WAE5B,IAAMwL,EAAsBxP,OAAOyP,iBAAmB,GAGlDzP,OAAOyP,wBACFzP,OAAOyP,gBAIhB,IAAMC,EAAc,CAClBC,EACAC,EACAC,EACAtJ,EACAuJ,GAUIC,GAAWC,EADXC,KAC4BC,IAAe,WAAf,EAAmBR,IAErD,OAAOS,YAAY3M,EAAagM,EAAgBO,GwBzCpCK,IAEdC,IAASC,OACP,kBAAC,IAAD,CAAUtM,MAAOA,IACf,kBAAC,IAAD,CAAiBoC,QAASA,EAASpC,MAAOA,IACxC,kBAAC,IAAD,CAAQoC,QAASA,GACf,kBAAC,GAAD,SAINmK,SAASC,eAAe,SxCsHpB,kBAAmB/K,WACrBA,UAAUgL,cAAcC,MACrB9L,MAAK,SAAA+L,GACJA,EAAaC,gBAEd7L,OAAM,SAAA5C,GACL6D,QAAQ7D,MAAMA,EAAMgD,a,mByCjJ5B0L,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.9ec67300.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Redux Actions\n * Patterns:\n * Credential Mgt - @@cred/<ACTION_NAME>\n * Post - @@post/<ACTION_NAME>\n * Get - @@get/<ACTION_NAME>\n * Put - @@put/<ACTION_NAME>\n * Delete - @@delete/<ACTION_NAME>\n * Navigate - @@navigate2/<ACTION_NAME>\n * Notify - @@notify/<ACTION_NAME>\n */\n// Navigation\nexport const NAVIGATE = \"@@navigate2/APP_ROUTE\";\n// User Profile\nexport const SET_USER_PROFILE = \"@@post/SET_USER_PROFILE\";\n// Credential Management API\nexport const STORE_PASSWORD_CREDENTIAL = \"@@cred/STORE_PASSWORD\";\nexport const PREVENT_SILENT_ACCESS = \"@@cred/PREVENT_SILENT_ACCESS\";\n// Notification\nexport const SET_GLOBAL_NOTIFICATION = \"@@notify/SET_GLOBAL_NOTIFICATION\";\nexport const UNSET_GLOBAL_NOTIFICATION = \"@@notify/UNSET_GLOBAL_NOTIFICATION\";\nexport const SET_FIELD_NOTIFICATION = \"@@notify/SET_FIELD_NOTIFICATION\";\n// Forms\nexport const CLEAR_FORM = \"@@form/CLEAR_FORM\";\nexport const CREATE_NEW_FORM = \"@@form/CREATE_NEW_FORM\";\nexport const SUBMIT_FORM = \"@@form/SUBMIT_FORM\";\n// Inputfield\nexport const ADD_NEW_INPUT_FIELD = \"@@form-field/ADD_NEW_INPUT_FIELD\";\nexport const ONBLUR_INPUT_FIELD = \"@@form-field/ONBLUR_INPUT_FIELD\";\nexport const ONCHANGE_INPUT_FIELD = \"@@form-field/ONCHANGE_INPUT_FIELD\";\nexport const ONFOCUS_INPUT_FIELD = \"@@form-field/ONFOCUS_INPUT_FIELD\";\n// Observable\nexport const HTTP_REQUEST = \"@@observable/HTTP_REQUEST\";\nexport const HTTP_REQUEST_FAILURE = \"@@observable/HTTP_REQUEST_FAILURE\";\nexport const HTTP_REQUEST_SUCCESS = \"@@observable/HTTP_REQUEST_SUCCESS\";\n","import { handleActions, Action } from \"redux-actions\";\nimport {\n  UserProfileModel\n} from \"../models/user-profile.model\";\nimport { SET_USER_PROFILE } from \"../types\";\n\nexport type State = UserProfileModel;\n\nconst initialState: State = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\",\n  phonenumber: \"\",\n};\n\nexport const userProfileReducer = handleActions<State, UserProfileModel>(\n  {\n    [SET_USER_PROFILE]: (state: State, action: Action<UserProfileModel>) => {\n      const newState = action.payload\n        ? Object.assign({}, state, action.payload as any)\n        : state;\n      return newState;\n    },\n  },\n  initialState\n);\n","import { handleActions, Action } from \"redux-actions\";\nimport {\n  GlobalNotificationModel,\n  GlobalNotificationPayload,\n} from \"../models/global-notification.model\";\nimport { UNSET_GLOBAL_NOTIFICATION, SET_GLOBAL_NOTIFICATION } from \"../types\";\n\nexport type State = {\n  notify: boolean;\n  notifyType: \"error\" | \"success\" | \"info\" | \"warning\";\n  notifyMessage: string;\n};\n\nconst initialState: State = {\n  notify: false,\n  notifyType: \"info\",\n  notifyMessage: \"\",\n};\n\nexport const globalNotificationReducer = handleActions<\n  State,\n  GlobalNotificationModel\n>(\n  {\n    [SET_GLOBAL_NOTIFICATION]: (\n      state: State,\n      action: Action<GlobalNotificationPayload>\n    ) => {\n      const newState = action.payload\n        ? Object.assign({}, state, action.payload as any, { notify: true })\n        : state;\n      return newState;\n    },\n    [UNSET_GLOBAL_NOTIFICATION]: (state: State) => {\n      return Object.assign({}, state, {\n        notify: false,\n        notifyType: \"\",\n        notifyMessage: \"\",\n      });\n    },\n  },\n  initialState\n);\n","import { handleActions, Action } from \"redux-actions\";\nimport {\n  HttpRequestModel\n} from \"../models/observable.model\";\nimport {\n  HTTP_REQUEST,\n  HTTP_REQUEST_FAILURE,\n  HTTP_REQUEST_SUCCESS\n} from \"../types\";\n\nexport type State = {\n  isSubmitting: boolean;\n};\n\nconst initialState: State = {\n  isSubmitting: false\n};\n\nexport const observableReducer = handleActions<\n  State,\n  HttpRequestModel\n>(\n  {\n    [HTTP_REQUEST]: (\n      state: State,\n      action: Action<HttpRequestModel>\n    ) => {\n      return Object.assign({}, state, {\n        isSubmitting: true\n      });\n    },\n    [HTTP_REQUEST_FAILURE]: (state: State) => {\n      return Object.assign({}, state, {\n        isSubmitting: false\n      });\n    },\n    [HTTP_REQUEST_SUCCESS]: (state: State) => {\n      return Object.assign({}, state, {\n        isSubmitting: false\n      });\n    },\n  },\n  initialState\n);\n","// REGEX TYPES\nconst VALID_EMAIL_REGX = \"VALID_EMAIL_REGX\";\nconst PASS_LENGTH_REGX = \"PASS_LENGTH_REGX\";\nconst VALID_PASS_REGX = \"VALID_PASS_REGEX\";\n\n// ERROR TYPES\nconst VALID_EMAIL_ERR = \"ENTER_VALID_EMAIL\";\nconst PASS_LENGTH_ERR = \"PASS_LENGTH_NOT_MET_ERR\";\nconst VALID_PASS_ERR = \"VALID_PASS_ERR\";\nconst EMPTY_FIELD_ERR = \"EMPTY_FIELD_ERR\";\n\n// FORM INPUT TYPES\nconst EMAIL = \"email\";\nconst PASSWORD = \"password\";\nconst DEFAULT = \"default\";\n\ntype regexValidators = {\n  [VALID_EMAIL_REGX]: RegExp;\n  [PASS_LENGTH_REGX]: RegExp;\n  [VALID_PASS_REGX]: RegExp;\n};\n\nconst regex: regexValidators = {\n  [VALID_EMAIL_REGX]: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n  [PASS_LENGTH_REGX]: /^.{8,12}$/,\n  [VALID_PASS_REGX]: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\\W]).*$/\n};\n\ntype validationErrors = {\n  [VALID_EMAIL_ERR]: string;\n  [PASS_LENGTH_ERR]: string;\n  [VALID_PASS_ERR]: string;\n  [EMPTY_FIELD_ERR]: string;\n};\n\nconst errors: validationErrors = {\n  [VALID_EMAIL_ERR]: \"Please enter a valid email address.\",\n  [PASS_LENGTH_ERR]: \"Password must be 8 to 12 characters.\",\n  [VALID_PASS_ERR]: \"Must have at least 1 number, 1 uppercase and 1 special character.\",\n  [EMPTY_FIELD_ERR]: \"Please enter a valid \"\n};\n\nexport type validateFormInput = {\n  [EMAIL]: Function;\n  [PASSWORD]: Function;\n  [DEFAULT]: Function;\n};\n\nexport const validators: validateFormInput = {\n  [EMAIL]: (input: string) => {\n    if (!regex[VALID_EMAIL_REGX].test(input)) {\n      return errors[VALID_EMAIL_ERR];\n    }\n  },\n  [PASSWORD]: (input: string) => {\n    if (!regex[PASS_LENGTH_REGX].test(input)) {\n      return errors[PASS_LENGTH_ERR];\n    } else if (!regex[VALID_PASS_REGX].test(input)) {\n      return errors[VALID_PASS_ERR];\n    }\n  },\n  [DEFAULT]: (input: string) => {\n    if (input.length === 0) {\n      return errors[EMPTY_FIELD_ERR];\n    }\n  }\n};\n\nexport const getValidator = <V extends validateFormInput, P extends keyof V>(key: P) => (obj: V) =>\n  obj[key];\n","import { handleActions, Action } from \"redux-actions\";\nimport {\n  FormModel,\n  FormPayload,\n  FormState,\n} from \"@models/form.model\";\nimport {\n  ADD_NEW_INPUT_FIELD,\n  CREATE_NEW_FORM,\n  CLEAR_FORM,\n  ONBLUR_INPUT_FIELD,\n  ONCHANGE_INPUT_FIELD,\n  SUBMIT_FORM\n} from \"@store/types\";\n// UTILS\nimport addFormInput from \"@reducers/utils/add-form-input.util\";\nimport updateFormInputVal from \"@reducers/utils/update-form-input-value.util\";\nimport validateFormInput from \"@reducers/utils/validate-form-input.util\";\nimport validateForm from \"@reducers/utils/validate-form.util\";\n\nexport type State = {\n  forms: Array<FormState>;\n};\n\nconst initialState: State = {\n  forms: []\n};\n\nexport const formReducer = handleActions<\n  State,\n  FormModel\n>(\n  {\n    [ADD_NEW_INPUT_FIELD]: (\n      state: State,\n      action: Action<FormPayload>\n    ) => {\n      const { formId, fieldId, validator } = action.payload as any;\n      const newFormInput = {\n        error: \"\",\n        fieldId,\n        hasError: false,\n        hasValue: false,\n        validator,\n        value: \"\"\n      };\n      const newFormsState = addFormInput(state.forms, formId, newFormInput);\n      return {forms: [...newFormsState]};\n    },\n    [CREATE_NEW_FORM]: (\n      state: State,\n      action: Action<FormPayload>\n    ) => {\n      const { formId } = action.payload as any;\n      const newForm = {\n        fields: [],\n        formId,\n        isPristine: true,\n        isSubmitting: false,\n        isValid: false\n      };\n\n      return { forms: [ newForm, ...state.forms ] };\n    },\n    [ONBLUR_INPUT_FIELD]: (\n      state: State,\n      action: Action<Object>\n    ) => {\n      const { formId, fieldId } = action.payload as any;\n      const newFormsState = validateFormInput(state.forms, formId, fieldId);\n      return {forms: [...newFormsState]};\n    },\n    [ONCHANGE_INPUT_FIELD]: (\n      state: State,\n      action: Action<Object>\n    ) => {\n      const { formId, fieldId, value } = action.payload as any;\n      const newFormsState = updateFormInputVal(state.forms, formId, fieldId, value);\n      return {forms: [...newFormsState]};\n    },\n    [SUBMIT_FORM]: (\n      state: State,\n      action: Action<FormPayload>\n    ) => {\n      const { formId } = action.payload as any;\n      const newFormsState = validateForm(state.forms, formId);\n      return {forms: [...newFormsState]};\n    },\n    [CLEAR_FORM]: (state: State) => {\n      return Object.assign({}, state, {});\n    },\n  },\n  initialState\n);\n","import {\n  Field,\n  FormState,\n} from \"@models/form.model\";\n\nconst getKeyValue = <FS extends FormState, P extends keyof FS>(key: P) => (obj: FS) =>\n  obj[key];\n\nconst setKeyValue = <FS extends FormState, P extends keyof FS, V extends FS[P]>(key: P) => (obj: FS) => (val: V) =>\n  obj[key] = val;\n\nconst deepCopyForms = (forms: Array<FormState>) => {\n  const clonedForms = [] as Array<FormState>;\n\n  forms.forEach((form: FormState) => {\n    const newItem = {} as FormState;\n    let prop: keyof FormState;\n\n    for (prop in form) {\n      const propValue = getKeyValue(prop)(form) as any;\n      if (propValue.constructor === Array) {\n        const val: Array<Field> = [...propValue];\n        setKeyValue(prop)(newItem)(val);\n      } else {\n        setKeyValue(prop)(newItem)(propValue);\n      }\n    }\n\n    clonedForms.push(newItem);\n  });\n\n  return clonedForms;\n};\n\nexport default (forms: Array<FormState>, formId: string, newField: Field) => {\n  forms.forEach((form) => {\n    // Find the formId from forms[]\n    if (form.formId === formId) {\n      form.fields = [newField, ...form.fields];\n    }\n  });\n\n  return forms;\n};\n","import { FormState } from \"@models/form.model\";\nimport { getValidator, validators } from \"@store/utils/validators.util\";\n\nexport default (forms: Array<FormState>, formId: string, fieldId: string) => { \n  forms.forEach((form) => {\n    // Find the formId from forms[]\n    if (form.formId === formId) {\n      form.isPristine = false;\n      const fields = form.fields;\n      let isFormValid = true;\n      // Find the fieldId from fields[]\n      fields.forEach((field) => {\n        if (field.fieldId === fieldId) {\n          const fieldVal = field.value;\n          const validator = field.validator;\n          const error = getValidator(validator)(validators)(fieldVal);\n\n          if (error) {\n            field.error = error;\n            field.hasError = true;\n            isFormValid = false;\n          } else {\n            field.error = \"\";\n            field.hasError = false;\n          }\n        }\n      });\n\n      form.isValid = isFormValid;\n    }\n  });\n\n  return forms;\n};\n","import { FormState } from \"@models/form.model\"; \n\nexport default (forms: Array<FormState>, formId: string, fieldId: string, fieldVal: string) => { \n  forms.forEach((form) => {\n    // Find the formId from forms[]\n    if (form.formId === formId) {\n      form.isPristine = false;\n      const fields = form.fields;\n      // Find the fieldId from fields[]\n      fields.forEach((field) => {\n        if (field.fieldId === fieldId) {\n          if (fieldVal.length) {\n            field.hasValue = true;\n            field.value = fieldVal;\n          } else {\n            field.hasValue = false;\n            field.value = \"\";\n          }\n        }\n      });\n    }\n  });\n\n  return forms;\n};\n","import { FormState } from \"@models/form.model\";\nimport { getValidator, validators } from \"@store/utils/validators.util\";\n\nexport default (forms: Array<FormState>, formId: string) => { \n  forms.forEach((form) => {\n    // Find the formId from forms[]\n    if (form.formId === formId) {\n      form.isPristine = false;\n      const fields = form.fields;\n      let isFormValid = true;\n      // Find the fieldId from fields[]\n      fields.forEach((field) => {\n          const fieldVal = field.value;\n          const validator = field.validator;\n          const error = getValidator(validator)(validators)(fieldVal);\n\n          if (error) {\n            field.error = error;\n            field.hasError = true;\n            isFormValid = false;\n          } else {\n            field.error = \"\";\n            field.hasError = false;\n          }\n      });\n\n      form.isValid = isFormValid;\n    }\n  });\n\n  return forms;\n};\n","import { combineReducers } from \"redux\";\nimport { routerReducer as router, RouterState } from \"react-router-redux\";\nimport {\n  userProfileReducer,\n  State as UserProfileState,\n} from \"./user-profile.reducer\";\nimport {\n  globalNotificationReducer,\n  State as GlobalNotificationState,\n} from \"./global-notification.reducer\";\nimport {\n  observableReducer,\n  State as ObservableState\n} from \"./observable.reducer\";\nimport { formReducer, State as FormState } from \"./form.reducer\";\n\ninterface StoreEnhancerState {}\n\nexport interface RootState extends StoreEnhancerState {\n  formManager: FormState;\n  globalNotification: GlobalNotificationState;\n  observable: ObservableState;\n  router: RouterState;\n  userProfile: UserProfileState;\n}\n\nexport const rootReducer = combineReducers<RootState>({\n  formManager: formReducer as any,\n  globalNotification: globalNotificationReducer as any,\n  observable: observableReducer as any,\n  router,\n  userProfile: userProfileReducer as any,\n});\n","import { Middleware } from \"redux\";\nimport axios from \"axios\";\nimport {\n  HTTP_REQUEST_FAILURE,\n  HTTP_REQUEST,\n  HTTP_REQUEST_SUCCESS,\n} from \"@store/types\";\n\nconst Observable: Middleware = (store: any) => (next: any) => (action: any) => {\n  const { type, payload = {} } = action || {};\n  const { data, method, url, success } = payload;\n  const { REACT_APP_API_BASE_URL, NODE_ENV } = process.env;\n  const URL = NODE_ENV === \"production\" ? `${REACT_APP_API_BASE_URL}${url}` : url;\n\n  if (type === HTTP_REQUEST) {\n    return axios({method, url: URL, data})\n      .then((res) => {\n        // Update redux state\n        if (success) {\n          store.dispatch({\n            type: success,\n            payload: res.data\n          });\n        }\n        // Navigation | res.challenge\n        store.dispatch({\n          type: HTTP_REQUEST_SUCCESS,\n          payload: res\n        });\n      })\n      .catch((err) => {\n        store.dispatch({\n          type: HTTP_REQUEST_FAILURE,\n          payload: err\n        });\n      });\n  }\n\n  return next(action);\n};\n\n// Side-effects\nexport default Observable;\n","import { Middleware } from \"redux\";\nimport {\n  HTTP_REQUEST_FAILURE,\n  SET_GLOBAL_NOTIFICATION\n} from \"@store/types\";\n\nconst Notification: Middleware = (store: any) => (next: any) => (action: any) => {\n  const { type, payload = {} } = action || {};\n\n  if (type === HTTP_REQUEST_FAILURE) {\n    const { message, alert } = payload?.response?.data || {};\n\n    store.dispatch({\n      type: SET_GLOBAL_NOTIFICATION,\n      payload: {\n        notifyType: alert || \"error\",\n        notifyMessage: message || \"Something went wrong.\",\n      }\n    });\n  }\n\n  return next(action);\n};\n\nexport default Notification;\n","import { Middleware } from \"redux\";\nimport { push } from \"react-router-redux\"\nimport { HTTP_REQUEST_SUCCESS, NAVIGATE } from \"@store/types\";\n\nconst Navigation: Middleware = (store: any) => (next: any) => (action: any) => {\n  const { type, payload = {} } = action || {};\n\n  if (type === NAVIGATE && payload.challenge) {\n    const { challenge } = payload;\n    store.dispatch(push(challenge));\n  } else if (type === HTTP_REQUEST_SUCCESS && payload.data) {\n    const { challenge } = payload?.data || {};\n    store.dispatch(push(challenge));\n  }\n\n  return next(action);\n};\n\nexport default Navigation;\n","import { Middleware } from \"redux\";\nimport {\n  PREVENT_SILENT_ACCESS,\n  SET_USER_PROFILE,\n  STORE_PASSWORD_CREDENTIAL\n} from \"@store/types\"\n\nconst Identity: Middleware = (store: any) => (next: any) => (action: any) => {\n  const { type, payload = {} } = action || {};\n\n  if (type === STORE_PASSWORD_CREDENTIAL) {\n    // Store credentials\n    if (navigator.credentials && payload.credentials) {\n      const { id, name, password } = payload.credentials;\n      const signup_credentials = new PasswordCredential({\n        id,\n        name,\n        password\n       });\n      navigator.credentials.store(signup_credentials)\n        .then(() => {\n          console.log(\"Storing credential for \", signup_credentials.id);\n        })\n        .catch((e) => {\n          console.log(\"Error storing credentials\", e);\n        });\n    }\n  } else if (type === PREVENT_SILENT_ACCESS) {\n    // Prevent silent access\n    if (navigator.credentials) {\n      navigator.credentials.preventSilentAccess()\n        .then(() => {\n          console.log(\"Silent access prevented. Mediation will be required for next credentials.get() call.\");\n        })\n        .catch((e) => {\n          console.log(\"Error preventing silent access.\", e);\n        })\n    }\n    // Update redux state\n    store.dispatch({\n      payload: {\n        firstname: \"\",\n        lastname: \"\",\n        phonenumber: \"\"\n      },\n      type: SET_USER_PROFILE\n    });\n  }\n\n  return next(action);\n}\n\nexport default Identity;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware as createRouterMiddleware } from \"react-router-redux\";\nimport { createBrowserHistory } from \"history\";\nimport { rootReducer } from \"@reducers/index\";\nimport observableMiddleware from \"@middlewares/observable.mware\";\nimport notificationMiddleware from \"@middlewares/notification.mware\";\nimport navigationMiddleware from \"@middlewares/navigation.mware\";\nimport identityMiddleware from \"@middlewares/identity.mware\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    __REDUX_STATE__?: typeof compose;\n    PasswordCredential?: PasswordCredential;\n  }\n}\n\n// Create history\nexport const history: any = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\n// Create router middleware using history\nexport const routerMiddleware = createRouterMiddleware(history);\n\nexport const configureStore = () => {\n  // Grab the state from a global variable injected into the server-generated HTML\n  const preloadedState: any = window.__REDUX_STATE__ || {};\n\n  // Allow the passed state to be garbage-collected\n  if (window.__REDUX_STATE__) {\n    delete window.__REDUX_STATE__;\n  }\n\n  // add middlewares\n  const middlewares = [\n    navigationMiddleware,\n    observableMiddleware,\n    notificationMiddleware,\n    routerMiddleware,\n    identityMiddleware\n  ];\n\n  // add enhancer\n  const composeEnhancers =\n    process.env.NODE_ENV !== \"production\" &&\n    typeof window === \"object\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : compose;\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n","import React from \"react\";\nimport ButtonLink from '@material-ui/core/Link';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\ntype LinkProps = {\n  actions: any;\n  onClick?: Function;\n  id: string;\n  value: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    }\n  }),\n);\n\nconst Link: React.FunctionComponent<LinkProps> = (props) => {\n  const { actions, onClick, id, value } = props;\n  const onClickHandler = (e: React.SyntheticEvent) => {\n    actions.unsetGlobalNotification();\n    typeof onClick === \"function\" && onClick(e);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonLink\n        id={id}\n        component=\"button\"\n        variant=\"body2\"\n        onClick={onClickHandler}\n      >\n        {value}\n      </ButtonLink>\n    </div>\n  );\n};\n\nexport default Link;\n","import { createAction } from \"redux-actions\";\nimport { GlobalNotificationPayload } from \"../models/global-notification.model\";\nimport { UNSET_GLOBAL_NOTIFICATION, SET_GLOBAL_NOTIFICATION } from \"../types\";\n\nexport const Type = {\n  UNSET_GLOBAL_NOTIFICATION,\n  SET_GLOBAL_NOTIFICATION,\n};\n\nexport const setGlobalNotification = createAction<GlobalNotificationPayload>(\n  Type.SET_GLOBAL_NOTIFICATION\n);\n\nexport const unsetGlobalNotification = createAction<GlobalNotificationPayload>(\n  Type.UNSET_GLOBAL_NOTIFICATION\n);\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport Link from \"@components/link\";\nimport * as notifyActions from \"@actions/global-notification.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, notifyActions);\n\nconst mapSateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(Link);\n","import React from \"react\";\nimport { UserProfileModel } from \"@models/user-profile.model\";\nimport Link from \"@components/containers/link.container\";\nimport { PREVENT_SILENT_ACCESS, SET_USER_PROFILE } from \"@store/types\";\nimport homepic_1 from \"../assets/img/home-1.jpg\";\nimport homepic_2 from \"../assets/img/home-2.jpg\";\nimport homepic_3 from \"../assets/img/home-3.jpg\";\nimport homepic_4 from \"../assets/img/home-4.jpg\";\n\ntype HomepageProps = {\n  actions: any;\n  history: any;\n  userProfileState: UserProfileModel;\n};\n\nclass Home extends React.Component<HomepageProps> {\n  autoSignIn = () => {\n    const { actions } = this.props;\n    // Get credentials | Credential Management API\n    if (navigator.credentials) {\n      navigator.credentials.get({\n        mediation: \"required\",\n        password: true\n      }).then((credential) => {\n        if (credential?.type === \"password\") {\n          // Auto-login\n          actions.httpRequest({\n            data: {\n              username: credential.id,\n              password: credential.password\n            },\n            method: \"post\",\n            url: \"/account/login\",\n            success: SET_USER_PROFILE\n          });\n        }\n      }).catch((e) => {\n        console.log(\"Fetch credentials error\", e);\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.userProfileState.firstname) {\n      this.autoSignIn();\n    }\n  }\n\n  shouldComponentUpdate(nexProps: any) {\n    if (this.props.userProfileState.firstname !== nexProps.userProfileState.firstname) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidUpdate() {\n    if (!this.props.userProfileState.firstname) {\n      this.autoSignIn();\n    }\n  }\n\n  handleOnLogout = () => {\n    this.props.actions.httpRequest({\n      data: {},\n      method: \"post\",\n      url: \"/account/logout\",\n      success: PREVENT_SILENT_ACCESS\n    });\n  };\n\n  render() {\n    const { history, userProfileState } = this.props;\n    const { firstname } = userProfileState;\n    return (\n      <div className=\"profile\">\n        <header>\n          <h1>jsfunfoo &#123; &#125;</h1>\n        </header>\n        <section className=\"breadcrumbs\">\n          <p>\n            Winter weather safety alert: Important store updates &amp; info.\n          </p>\n          <Link\n            id=\"learnMoreLink\"\n            value=\"Learn more\"\n          />\n        </section>\n        <section className=\"main\">\n          <section className=\"left-panel\">\n            <div>\n              <img src={homepic_1} alt=\"home pic\" />\n            </div>\n            <div>\n              <img src={homepic_2} alt=\"home pic\" />\n            </div>\n            <div>\n              <img src={homepic_3} alt=\"home pic\" />\n            </div>\n            <div>\n              <img src={homepic_4} alt=\"home pic\" />\n            </div>\n          </section>\n          <section className=\"side-panel\">\n            <ul>\n              {\n                firstname ? (\n                  <li>\n                    <div className=\"greet-user\">Welcome {firstname}</div>\n                  </li>\n                ) : (\n                  <li>\n                    <Link\n                      id=\"createAccountLink\"\n                      value=\"Sign in\"\n                      onClick={() => history.push(\"/login\")}\n                    />\n                  </li>\n                )\n              }\n              <li>\n                <Link\n                  id=\"trackOrderLink\"\n                  value=\"Track orders\"\n                />\n              </li>\n              <li>\n                <Link\n                  id=\"accountLink\"\n                  value=\"Account\"\n                />\n              </li>\n              <li>\n                <Link\n                  id=\"helpLink\"\n                  value=\"Help\"\n                />\n              </li>\n              {\n                firstname ? (\n                  <Link\n                    id=\"signoutLink\"\n                    value=\"Sign out\"\n                    onClick={this.handleOnLogout}\n                  />\n                ) : null\n              }\n            </ul>\n          </section>\n        </section>\n        <section className=\"footer\">\n          <footer>&#169; copyright 2021</footer>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import { createAction } from \"redux-actions\";\nimport { HttpReqModel } from \"@models/observable.model\";\nimport { HTTP_REQUEST } from \"@store/types\";\n\nexport const Type = {\n  HTTP_REQUEST,\n};\n\nexport const httpRequest = createAction<HttpReqModel>(\n  Type.HTTP_REQUEST\n);\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"@reducers/index\";\nimport HomePage from \"@pages/home.page\";\nimport * as observableActions from \"@actions/observable.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, observableActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  userProfileState: state.userProfile\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport TextField  from \"@material-ui/core/TextField\";\nimport { FormModel } from \"@models/form.model\"\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\ntype FormInputProps = {\n  actions: any;\n  autocomplete?: string;\n  editable?: boolean;\n  formManager: FormModel;\n  formId?: string;\n  id: string;\n  label: string;\n  name?: string;\n  placeholder?: string;\n  type: \"text\" | \"password\" | \"email\";\n  validator?: \"email\" | \"password\" | \"default\";\n  value?: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginBottom: 5\n    }\n  }),\n);\n\ntype CompProps = {\n  error?: boolean;\n  autoComplete?: string;\n  id: string;\n  type: \"text\" | \"password\" | \"email\";\n  label: string;\n  placeholder?: string;\n  blurHandler(event: React.FocusEvent<HTMLInputElement>): void;\n  changeHandler(event: React.ChangeEvent<HTMLInputElement>): void;\n};\n\nconst Component: React.FunctionComponent<CompProps> = (props) => {\n  const { blurHandler, changeHandler, ...restofProps } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        {...restofProps}\n        onBlur={blurHandler}\n        onChange={changeHandler}\n        variant=\"outlined\"\n      />\n    </div>\n  );\n};\n\nexport default class FormInput extends React.Component<FormInputProps> {\n  constructor(props: FormInputProps) {\n    super(props);\n    const { formId, id: fieldId, validator } = props;\n\n    props.actions.addNewInput({\n      formId,\n      fieldId,\n      validator\n    });\n  }\n\n  handleOnBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    const { actions, formId, id: fieldId } = this.props;\n\n    actions.onBlurInput({\n      formId,\n      fieldId\n    });\n  };\n\n  handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { actions, formId, id: fieldId } = this.props;\n    actions.onChangeInput({\n      formId,\n      fieldId,\n      value: e.currentTarget.value\n    });\n  };\n\n  render() {\n    const {\n      autocomplete,\n      formId,\n      formManager,\n      editable = true,\n      id,\n      label,\n      placeholder = \"\",\n      type,\n      value = \"\",\n    } = this.props;\n    const findError: Function = () => {\n      let error: string = \"\";\n\n      formManager.forms.forEach((form) => {\n        if (form.formId === formId) {\n          const fields = form.fields;\n          fields.forEach((field) => {\n            if (field.fieldId === id && field.hasError) {\n              error = field.error;\n            }\n          });\n        }\n      });\n\n      return error;\n    };\n    const fieldError: string = findError();\n\n    return editable ? (\n      <Component\n        {...(fieldError ? { error: true } : {})}\n        autoComplete={autocomplete}\n        type={type}\n        id={id}\n        label={label}\n        placeholder={placeholder}\n        blurHandler={this.handleOnBlur}\n        changeHandler={this.handleOnChange}\n      />\n    ) : (\n      <div>\n        <label htmlFor={id}>{label}</label>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n","import { createAction } from \"redux-actions\";\nimport { FormPayload } from \"../models/form.model\";\nimport {\n  ADD_NEW_INPUT_FIELD,\n  CREATE_NEW_FORM,\n  CLEAR_FORM,\n  ONBLUR_INPUT_FIELD,\n  ONCHANGE_INPUT_FIELD,\n  SUBMIT_FORM\n} from \"../types\";\n\nexport const Type = {\n  ADD_NEW_INPUT_FIELD,\n  CREATE_NEW_FORM,\n  CLEAR_FORM,\n  ONBLUR_INPUT_FIELD,\n  ONCHANGE_INPUT_FIELD,\n  SUBMIT_FORM,\n};\n\nexport const addNewInput = createAction<FormPayload>(\n  Type.ADD_NEW_INPUT_FIELD\n);\n\nexport const createNewForm = createAction<FormPayload>(\n  Type.CREATE_NEW_FORM\n);\n\nexport const onBlurInput = createAction<FormPayload>(\n  Type.ONBLUR_INPUT_FIELD\n);\n\nexport const onChangeInput = createAction<FormPayload>(\n  Type.ONCHANGE_INPUT_FIELD\n);\n\nexport const onFormSubmit = createAction<FormPayload>(\n  Type.ONCHANGE_INPUT_FIELD\n);\n\nexport const clearForm = createAction<FormPayload>(\n  Type.CLEAR_FORM\n);\n\nexport const formSubmission = createAction<FormPayload>(\n  Type.SUBMIT_FORM\n);\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"@reducers/index\";\nimport InputField from \"@components/input-field\";\nimport * as notifyActions from \"@actions/global-notification.action\";\nimport * as formActions from \"@actions/form.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, formActions, notifyActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  formManager: state.formManager\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(InputField);\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { Alert } from \"@material-ui/lab\";\nimport \"@styles/layout.css\";\n\nconst useStyls = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }),\n);\n\ntype NotifyProps = {\n  message: string;\n  type: \"error\" | \"warning\" | \"success\" | \"info\";\n};\n\nconst Notify: React.FunctionComponent<NotifyProps> = (props) => {\n  const { message, type } = props;\n\n  return (\n    <div className={useStyls().root}>\n      <Alert severity={type}>\n        {message}\n      </Alert>\n    </div>\n  )\n}\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  notify: boolean;\n  notifyMessage: string;\n  notifyType: \"error\" | \"warning\" | \"success\" | \"info\";\n  title: string;\n};\n\nconst Layout: React.FunctionComponent<LayoutProps> = (props) => {\n  const { children, notify, notifyMessage, notifyType, title } = props;\n  return (\n    <div className=\"standard\">\n      <div className=\"wrapper\">\n        <section className=\"logo\">\n          <div>jsfunfoo &#123; &#125;</div>\n        </section>\n        <section className=\"notify\">\n          { notify ? <Notify type={notifyType} message={notifyMessage} /> : null }\n        </section>\n        <main>\n          <header className=\"header\">\n            <h1>{title}</h1>\n          </header>\n          <section className=\"content\">{children}</section>\n        </main>\n        <section className=\"footer\">\n          <footer>&#169; copyright 2021</footer>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport { HttpRequestModel } from \"@models/observable.model\";\n\ntype ButtonProps = {\n  actions: any;\n  observable: HttpRequestModel;\n  onClick?: Function;\n  id: string;\n  type: \"button\" | \"submit\";\n  value: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: \"relative\",\n      width: \"100%\"\n    },\n    button: {\n      color: \"#fff\",\n      backgroundColor: \"#0065ff\",\n      width: \"100%\",\n      padding: 12,\n      '&:hover': {\n        backgroundColor: \"#013f9e\"\n      }\n    },\n    buttonProgress: {\n      color: \"#3f51b5\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }),\n);\n\nconst PrimaryButton: React.FunctionComponent<ButtonProps> = (props) => {\n  const { actions, onClick, id, type, value } = props;\n  const { isSubmitting } = props.observable;\n  const onClickHandler = (e: React.SyntheticEvent) => {\n    actions.unsetGlobalNotification();\n    typeof onClick === \"function\" && onClick(e);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          color=\"primary\"\n          className={classes.button}\n          disabled={isSubmitting ? true : undefined}\n          id={id}\n          onClick={onClickHandler}\n          type={type}\n          value={value}\n          variant=\"contained\"\n        >\n          {value}\n        </Button>\n        {isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n  );\n};\n\nexport default PrimaryButton;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"@reducers/index\";\nimport PrimaryButton from \"@components/primary-button\";\nimport * as notifyActions from \"@actions/global-notification.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, notifyActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  observable: state.observable\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(PrimaryButton);\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Field, FormModel, FormFields } from \"@models/form.model\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: \"95%\",\n      },\n    },\n  }),\n);\n\ntype CompProps = {\n  id: string;\n  children: React.ReactNode;\n  submitHandler(event: React.FormEvent<HTMLFormElement>): void;\n};\n\nconst Component: React.FunctionComponent<CompProps> = (props) => {\n  const { children, id: formId, submitHandler} = props;\n  const classes = useStyles();\n\n  return (\n      <form\n        id={formId}\n        className={classes.root}\n        onSubmit={submitHandler}\n        noValidate\n      >\n        {children}\n      </form>\n  );\n};\n\ntype FormProps = {\n  actions: any;\n  children: React.ReactNode;\n  formManager: FormModel;\n  id: string;\n  onSubmit?: Function;\n};\n\ntype FormState = {};\n\nconst setKeyValue = <OBJ extends FormFields, P extends keyof OBJ, V extends OBJ[P]>(key: P) => (obj: OBJ) => (val: V) =>\n  obj[key] = val;\n\nclass Form extends React.Component<FormProps, FormState> {\n  constructor(props: FormProps) {\n    super(props);\n\n    props.actions.createNewForm({\n      formId: props.id,\n    });\n  }\n\n  handleOnSubmit = (e: React.SyntheticEvent) => {\n    const { actions, formManager, id: formId, onSubmit } = this.props;\n    let formFields: Array<Field> = [];\n    let isFormValid = false;\n    e.preventDefault();\n    actions.formSubmission({ formId });\n    formManager.forms.forEach((form) => {\n      if (form.formId === formId) {\n        isFormValid = form.isValid;\n        formFields = form.fields;\n      }\n    });\n\n    const fields = {} as FormFields;\n\n    formFields.forEach((field) => {\n      const fieldId = field.fieldId;\n      const fieldVal = field.value;\n      setKeyValue(fieldId)(fields)(fieldVal);\n    });\n\n    // Call the parent handler\n    typeof onSubmit === \"function\" && onSubmit(e, fields, isFormValid);\n  };\n\n  render() {\n    return (<Component submitHandler={this.handleOnSubmit} {...this.props} />);\n  }\n}\n\nexport default Form;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"@reducers/index\";\nimport Form from \"@components/form\";\nimport * as notifyActions from \"@actions/global-notification.action\";\nimport * as formActions from \"@actions/form.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, formActions, notifyActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  formManager: state.formManager\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(Form);\n","import React from \"react\";\nimport InputField from \"@components/containers/input-field.container\";\nimport Layout from \"@components/layout\";\nimport { GlobalNotificationModel } from \"@models/global-notification.model\";\nimport { FormFields } from \"@models/form.model\";\nimport Link from \"@components/containers/link.container\";\nimport PrimaryButton from \"@components/containers/primary-button.container\";\nimport Form from \"@components/containers/form.container\";\nimport { SET_USER_PROFILE } from \"@store/types\";\n\ntype SignInProps = {\n  actions: any;\n  history: any;\n  notification: GlobalNotificationModel\n};\n\nclass SignInPage extends React.Component<SignInProps> { \n  componentDidMount() {\n    const { actions } = this.props;\n\n    // Credential Management\n    if (navigator.credentials) {\n      navigator.credentials.get({\n        mediation: \"required\",\n        password: true\n      }).then((credential) => {\n        console.log(\"Fetch credentials\", credential);\n        if (credential?.type === \"password\") {\n          // auto-login\n          actions.httpRequest({\n            data: {\n              username: credential.id,\n              password: credential.password\n            },\n            method: \"post\",\n            url: \"/account/login\",\n            success: SET_USER_PROFILE\n          });\n        }\n      }).catch((e) => {\n        console.log(\"Fetch credentials error\", e);\n      });\n    }\n  }\n\n  handleOnSubmit = (e: React.SyntheticEvent, fields: FormFields, isFormValid: boolean) => {\n    const { actions } = this.props;\n\n    if (isFormValid) {\n      // call the login api\n      actions.httpRequest({\n        data: {\n          username: fields.email_address,\n          password: fields.pwd\n        },\n        method: \"post\",\n        url: \"/account/login\",\n        success: SET_USER_PROFILE\n      });\n    }\n  };\n\n  render() {\n    const { history, notification } = this.props;\n    const { notify, notifyMessage, notifyType } = notification;\n    const { push } = history;\n    const formId = \"SIGN_IN\";\n\n    return (\n      <Layout\n        notify={notify}\n        notifyMessage={notifyMessage}\n        notifyType={notifyType}\n        title=\"Sign in to your account\"\n      >\n        <div>\n          <Form id={formId} onSubmit={this.handleOnSubmit}>\n            <InputField\n              autocomplete=\"off\"\n              formId={formId}\n              id=\"email_address\"\n              label=\"Email address (required)\"\n              name=\"username\"\n              type=\"email\"\n              validator=\"email\"\n            />\n            <InputField\n              autocomplete=\"off\"\n              formId={formId}\n              id=\"pwd\"\n              label=\"Password (required)\"\n              name=\"password\"\n              type=\"password\"\n              validator=\"default\"\n            />\n            <PrimaryButton type=\"submit\" id=\"sign_in\" value=\"Sign in\" />\n            <Link\n              id=\"createAccountLink\"\n              value=\"Create account\"\n              onClick={() => push(\"/createAccount\")}\n            />\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default SignInPage;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"@reducers/index\";\nimport SignInPage from \"@pages/sign-in.page\";\nimport * as notifyActions from \"@actions/global-notification.action\";\nimport * as formActions from \"@actions/form.action\";\nimport * as observableActions from \"@actions/observable.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({},\n  formActions,\n  notifyActions,\n  observableActions\n);\n\nconst mapSateToProps = (state: RootState) => ({\n  notification: state.globalNotification\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(SignInPage);\n","import React from \"react\";\nimport Layout from \"@components/layout\";\nimport InputField from \"@components/containers/input-field.container\";\nimport { GlobalNotificationModel } from \"@models/global-notification.model\";\nimport Link from \"@components/containers/link.container\";\nimport PrimaryButton from \"@components/containers/primary-button.container\";\nimport Form from \"@components/containers/form.container\";\nimport { FormFields } from \"@models/form.model\";\nimport { SET_USER_PROFILE } from \"@store/types\";\n\ntype CreateAccountProps = {\n  actions: any;\n  history: any;\n  notification: GlobalNotificationModel;\n};\n\nconst CreateAccount: React.FunctionComponent<CreateAccountProps> = (props) => {\n  const { push } = props.history;\n  const formId = \"CREATE_ACCOUNT\";\n\n  // Form submit handler\n  const handleOnSubmit = (e: React.SyntheticEvent, fields: FormFields, isFormValid: boolean) => {\n    const { actions } = props;\n    const { first_name, last_name, email_address, pwd } = fields;\n\n    if (isFormValid) {\n      actions.httpRequest({\n        data: {\n          firstname: first_name,\n          lastname: last_name,\n          username: email_address,\n          password: pwd\n        },\n        method: \"post\",\n        url: \"/account/createAccount\",\n        success: SET_USER_PROFILE\n      }).then(() => {\n        actions.storePwdCredential({\n          credentials: {\n            id: email_address,\n            name: email_address,\n            password: pwd\n          }\n        });\n      });\n    }\n  };\n\n  const { notify, notifyMessage, notifyType } = props.notification;\n\n  return (\n    <Layout\n      notify={notify}\n      notifyMessage={notifyMessage}\n      notifyType={notifyType}\n      title=\"Create account\"\n    >\n      <div>\n        <Form id={formId} onSubmit={handleOnSubmit}>\n          <InputField\n            formId={formId}\n            id=\"first_name\"\n            label=\"First name (required)\"\n            type=\"text\"\n            validator=\"default\"\n          />\n          <InputField\n            formId={formId}\n            id=\"last_name\"\n            label=\"Last name (required)\"\n            type=\"text\"\n            validator=\"default\"\n          />\n          <InputField\n            autocomplete=\"username\"\n            formId={formId}\n            id=\"email_address\"\n            label=\"Email address (required)\"\n            name=\"username\"\n            type=\"email\"\n            validator=\"email\"\n          />\n          <InputField\n            autocomplete=\"new-password\"\n            formId={formId}\n            id=\"pwd\"\n            label=\"Password (required)\"\n            name=\"password\"\n            type=\"password\"\n            validator=\"password\"\n          />\n          <PrimaryButton type=\"submit\" id=\"create_account\" value=\"Create Account\" />\n          <Link\n            id=\"signInLink\"\n            value=\"Sign in\"\n            onClick={() => push(\"/login\")}\n          />\n        </Form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CreateAccount;\n","import { createAction } from \"redux-actions\";\nimport { STORE_PASSWORD_CREDENTIAL } from \"@store/types\";\nimport { CredModel } from \"@models/cred.model\";\n\nexport const Type = {\n  STORE_PASSWORD_CREDENTIAL,\n};\n\nexport const storePwdCredential = createAction<CredModel>(\n  Type.STORE_PASSWORD_CREDENTIAL\n);\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport CreateAccountPage from \"@pages/create-account.page\";\nimport { RootState } from \"@reducers/index\";\nimport * as notifyActions from \"@actions/global-notification.action\";\nimport * as observableActions from \"@actions/observable.action\";\nimport * as credActions from \"@actions/cred.action\";\n\nconst actions: any = Object.assign({},\n  credActions,\n  notifyActions,\n  observableActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  notification: state.globalNotification,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(CreateAccountPage);\n","import React from \"react\";\nimport \"@styles/user-layout.css\";\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  notify: boolean;\n  notifyMessage: string;\n  notifyType: string;\n  title: string;\n};\n\nconst UserLayout: React.FunctionComponent<LayoutProps> = (props) => {\n  const { children, notifyMessage, notifyType, title } = props;\n  return (\n    <div className=\"profile\">\n      <header>\n        <h1>&#123; .js &#125;</h1>\n      </header>\n      <section className=\"breadcrumbs\">\n        <h2>{title}</h2>\n      </section>\n      {notifyMessage ? (\n        <section className=\"notification\">\n          <div className={`message ${notifyType}`}>{notifyMessage}</div>\n        </section>\n      ) : null}\n      <section className=\"main\">{children}</section>\n      <section className=\"footer\">\n        <footer>&#169; copyright 2021</footer>\n      </section>\n    </div>\n  );\n};\n\nexport default UserLayout;\n","import React from \"react\";\nimport InputField from \"@components/containers/input-field.container\";\nimport { UserProfileModel } from \"@models/user-profile.model\";\nimport { GlobalNotificationModel } from \"@models/global-notification.model\";\nimport UserLayout from \"@components/user-layout\";\nimport Link from \"@components/containers/link.container\";\nimport \"@styles/user-profile.css\";\n\ntype ProfileProps = {\n  actions: any;\n  notification: GlobalNotificationModel;\n  userProfileState: UserProfileModel;\n};\n\ntype ProfileState = {\n  nameEditable: boolean;\n  emailEditable: boolean;\n  phoneEditable: boolean;\n};\n\nexport class UserProfilePage extends React.Component<\n  ProfileProps,\n  ProfileState\n> {\n  state = {\n    nameEditable: false,\n    emailEditable: false,\n    phoneEditable: false,\n  };\n\n  toggleEditName = (e: React.SyntheticEvent, edit: boolean) => {\n    this.setState({\n      nameEditable: edit,\n    });\n  };\n\n  toggleEditEmail = (e: React.SyntheticEvent, edit: boolean) => {\n    this.setState({\n      emailEditable: edit,\n    });\n  };\n\n  toggleEditPhone = (e: React.SyntheticEvent, edit: boolean) => {\n    this.setState({\n      phoneEditable: edit,\n    });\n  };\n\n  handleOnLogout = () => {\n    this.props.actions.httpRequest({\n      data: {},\n      method: \"post\",\n      url: \"/account/logout\",\n      success: \"USER_LOGOUT\"\n    });\n  };\n\n  render() {\n    const { userProfileState, notification } = this.props;\n    const { firstname, lastname, email, phonenumber } = userProfileState;\n    const { notify, notifyMessage, notifyType } = notification;\n    return (\n      <UserLayout\n        notify={notify}\n        notifyMessage={notifyMessage}\n        notifyType={notifyType}\n        title={`Welcome ${firstname}`}\n      >\n        <div className=\"editProfile\">\n          <div>\n            <Link\n              id=\"logoutLink\"\n              value=\"Logout\"\n              onClick={this.handleOnLogout}\n            />\n          </div>\n          <ul>\n            <li>\n              <form>\n                <InputField\n                  editable={this.state.nameEditable}\n                  id=\"first_name\"\n                  label=\"First name (required)\"\n                  type=\"text\"\n                  value={firstname}\n                />\n                <InputField\n                  editable={this.state.nameEditable}\n                  id=\"last_name\"\n                  label=\"Last name (required)\"\n                  type=\"text\"\n                  value={lastname}\n                />\n                <div className=\"buttons\">\n                  {this.state.nameEditable ? (\n                    <>\n                      <div className=\"secondary\">\n                        <button\n                          type=\"button\"\n                          id=\"cancelEditName\"\n                          value=\"Cancel\"\n                          onClick={(e: React.SyntheticEvent) =>\n                            this.toggleEditName(e, false)\n                          }\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                      <div className=\"primary\">\n                        <button type=\"submit\" id=\"updateName\" value=\"Submit\">\n                          Submit\n                        </button>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"buttonAsLink\">\n                      <button\n                        type=\"button\"\n                        id=\"editName\"\n                        value=\"Edit\"\n                        onClick={(e: React.SyntheticEvent) =>\n                          this.toggleEditName(e, true)\n                        }\n                      >\n                        Edit\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </form>\n            </li>\n            <li>\n              <form>\n                <InputField\n                  editable={this.state.emailEditable}\n                  id=\"email_address\"\n                  label=\"Email address (required)\"\n                  type=\"email\"\n                  value={email}\n                />\n                <div className=\"buttons\">\n                  {this.state.emailEditable ? (\n                    <>\n                      <div className=\"secondary\">\n                        <button\n                          type=\"button\"\n                          id=\"cancelEditEmail\"\n                          value=\"Cancel\"\n                          onClick={(e: React.SyntheticEvent) =>\n                            this.toggleEditEmail(e, false)\n                          }\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                      <div className=\"primary\">\n                        <button type=\"submit\" id=\"updateEmail\" value=\"Submit\">\n                          Submit\n                        </button>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"buttonAsLink\">\n                      <button\n                        type=\"button\"\n                        id=\"editEmail\"\n                        value=\"Edit\"\n                        onClick={(e: React.SyntheticEvent) =>\n                          this.toggleEditEmail(e, true)\n                        }\n                      >\n                        Edit\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </form>\n            </li>\n            <li>\n              <form>\n                <InputField\n                  editable={this.state.phoneEditable}\n                  id=\"phone_number\"\n                  label=\"Phone number (required)\"\n                  type=\"email\"\n                  value={phonenumber}\n                />\n                <div className=\"buttons\">\n                  {this.state.phoneEditable ? (\n                    <>\n                      <div className=\"secondary\">\n                        <button\n                          type=\"button\"\n                          id=\"cancelEditPhone\"\n                          value=\"Cancel\"\n                          onClick={(e: React.SyntheticEvent) =>\n                            this.toggleEditPhone(e, false)\n                          }\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                      <div className=\"primary\">\n                        <button type=\"submit\" id=\"updatePhone\" value=\"Submit\">\n                          Submit\n                        </button>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"buttonAsLink\">\n                      <button\n                        type=\"button\"\n                        id=\"editPhoneNumber\"\n                        value=\"Edit\"\n                        onClick={(e: React.SyntheticEvent) =>\n                          this.toggleEditPhone(e, true)\n                        }\n                      >\n                        Edit\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </form>\n            </li>\n          </ul>\n        </div>\n      </UserLayout>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { UserProfilePage } from \"@pages/user-profile.page\";\nimport { RootState } from \"@reducers/index\";\nimport * as notifyActions from \"@actions/global-notification.action\";\nimport * as observableActions from \"@actions/observable.action\";\n\n// Add all the actions\nconst actions: any = Object.assign({}, notifyActions, observableActions);\n\nconst mapSateToProps = (state: RootState) => ({\n  notification: state.globalNotification,\n  userProfileState: state.userProfile,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(UserProfilePage);\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Home from \"@pages/containers/home.container\";\nimport SignIn from \"@pages/containers/sign-in.container\";\nimport CreateAccount from \"@pages/containers/create-account.container\";\nimport UserProfile from \"@pages/containers/user-profile.container\";\n\nexport default () => {\n  return (\n    <Switch>\n      <Redirect\n        exact\n        from=\"/\"\n        to=\"/home\"\n      />\n      <Route\n        exact\n        path=\"/home\"\n        component={Home}\n        key=\"account-home\"\n      />\n      <Route\n        exact\n        path=\"/login\"\n        component={SignIn}\n        key=\"acount-signin\"\n      />\n      <Route\n        exact\n        path=\"/createAccount\"\n        component={CreateAccount}\n        key=\"acount-create-account\"\n      />\n      <Route\n        exact\n        path=\"/user/profile\"\n        component={UserProfile}\n        key=\"acount-user-profile\"\n      />\n      </Switch>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"react-router-redux\";\nimport { Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureStore, history } from \"@store\";\nimport Routes from \"./routes\";\nimport \"@styles/normalize.css\";\n\n// create new store\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history} store={store}>\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/home-1.01e6eb45.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home-2.7dbed7e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home-3.78f06cfd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home-4.5aad7231.jpg\";"],"sourceRoot":""}