{
  "compilerOptions": {
    /* Basic Options */
    // "incremental": true,                   /* Enable incremental compilation */
    "target": "es5", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "esnext", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],                             /* Specify library files to be included in the compilation. */
    "jsx": "react",
    "allowJs": true,                       /* Allow javascript files to be compiled. */
    "outDir": "./build",                        /* Redirect output structure to the directory. */
    "removeComments": true,                /* Do not emit comments to output. */
    "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    "strict": true, /* Enable all strict type-checking options. */
    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": ".",                       /* Base directory to resolve non-absolute module names. */
    "rootDirs": ["src"],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "paths": {
      "@apis": [
        "../client/src/apis/index.tsx"
      ],
      "@components/*": [
        "../client/src/components/*"
      ],
      "@containers/*": [
        "../client/src/pages/containers/*"
      ],
      "@middlewares/*": [
        "../client/src/middlewares/*"
      ],
      "@store": [
        "../client/src/store/index.tsx"
      ],
      "@store/utils/*": [
        "../client/src/store/utils/*"
      ],
      "@actions/*": [
        "../client/src/store/actions/*"
      ],
      "@pages/*": [
        "../client/src/pages/*"
      ],
      "@models/*": [
        "../client/src/store/models/*"
      ],
      "@reducers/*": [
        "../client/src/store/reducers/*"
      ],
      "@styles/*": [
        "../client/src/styles/*"
      ],
      "@types": [
        "../client/src/store/types/index.tsx"
      ],
      "@utils/*": [
        "../client/src/utils/*"
      ]
    },
    /* Experimental Options */
    /* Advanced Options */
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
  },
  "include": ["src"], // Target specific folder inside app-server
  "exclude": ["node_modules"]
}
